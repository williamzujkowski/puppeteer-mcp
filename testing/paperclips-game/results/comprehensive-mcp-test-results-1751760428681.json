{
  "startTime": "2025-07-06T00:07:05.648Z",
  "testPhases": {
    "mcpServerStartup": {
      "status": "success",
      "details": {
        "startupTime": 2004,
        "pid": 565464,
        "stderr": "{\"level\":\"info\",\"time\":\"2025-07-06T00:07:05.919Z\",\"pid\":565464,\"hostname\":\"framework\",\"name\":\"app\",\"environment\":\"development\",\"service\":\"puppeteer-mcp\",\"msg\":\"Starting MCP server\",\"transportType\":\"stdio\",\"timestamp\":\"2025-07-06T00:07:05.919Z\"}\n{\"level\":\"info\",\"time\":\"2025-07-06T00:07:05.920Z\",\"pid\":565464,\"hostname\":\"framework\",\"name\":\"app\",\"environment\":\"development\",\"service\":\"puppeteer-mcp\",\"msg\":\"MCP server started with stdio transport\",\"timestamp\":\"2025-07-06T00:07:05.920Z\"}\n"
      }
    },
    "protocolHandshake": {
      "status": "success",
      "details": {
        "handshakeTime": 7,
        "serverInfo": {
          "name": "puppeteer-mcp",
          "version": "0.1.0"
        },
        "protocolVersion": "2024-11-05",
        "capabilities": {
          "resources": {},
          "tools": {},
          "prompts": {}
        }
      }
    },
    "toolDiscovery": {
      "status": "success",
      "details": {
        "discoveryTime": 2,
        "totalTools": 6,
        "toolCategories": {
          "session": [
            {
              "name": "create-session",
              "description": "Create a new session for API interactions",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "number",
                    "description": "Session duration in seconds"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            },
            {
              "name": "list-sessions",
              "description": "List active sessions",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "delete-session",
              "description": "Delete an active session",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "description": "Session ID to delete"
                  }
                },
                "required": [
                  "sessionId"
                ]
              }
            }
          ],
          "browser": [
            {
              "name": "create-browser-context",
              "description": "Create a Puppeteer browser context",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "headless": {
                        "type": "boolean"
                      },
                      "viewport": {
                        "type": "object",
                        "properties": {
                          "width": {
                            "type": "number"
                          },
                          "height": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "sessionId"
                ]
              }
            },
            {
              "name": "execute-in-context",
              "description": "Execute commands in a browser context",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "contextId": {
                    "type": "string",
                    "description": "Context ID to execute command in"
                  },
                  "command": {
                    "type": "string",
                    "description": "Command to execute"
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Parameters for the command"
                  }
                },
                "required": [
                  "contextId",
                  "command"
                ]
              }
            }
          ],
          "api": [
            {
              "name": "execute-api",
              "description": "Execute API calls across REST, gRPC, or WebSocket protocols",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "rest",
                      "grpc",
                      "websocket"
                    ],
                    "description": "Protocol to use"
                  },
                  "operation": {
                    "type": "object",
                    "description": "Protocol-specific operation details"
                  },
                  "auth": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "jwt",
                          "apikey",
                          "session"
                        ]
                      },
                      "credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "protocol",
                  "operation"
                ]
              }
            }
          ],
          "other": []
        },
        "tools": [
          {
            "name": "execute-api",
            "description": "Execute API calls across REST, gRPC, or WebSocket protocols",
            "inputSchema": {
              "type": "object",
              "properties": {
                "protocol": {
                  "type": "string",
                  "enum": [
                    "rest",
                    "grpc",
                    "websocket"
                  ],
                  "description": "Protocol to use"
                },
                "operation": {
                  "type": "object",
                  "description": "Protocol-specific operation details"
                },
                "auth": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "jwt",
                        "apikey",
                        "session"
                      ]
                    },
                    "credentials": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "protocol",
                "operation"
              ]
            }
          },
          {
            "name": "create-session",
            "description": "Create a new session for API interactions",
            "inputSchema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "duration": {
                  "type": "number",
                  "description": "Session duration in seconds"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          },
          {
            "name": "list-sessions",
            "description": "List active sessions",
            "inputSchema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "delete-session",
            "description": "Delete an active session",
            "inputSchema": {
              "type": "object",
              "properties": {
                "sessionId": {
                  "type": "string",
                  "description": "Session ID to delete"
                }
              },
              "required": [
                "sessionId"
              ]
            }
          },
          {
            "name": "create-browser-context",
            "description": "Create a Puppeteer browser context",
            "inputSchema": {
              "type": "object",
              "properties": {
                "sessionId": {
                  "type": "string"
                },
                "options": {
                  "type": "object",
                  "properties": {
                    "headless": {
                      "type": "boolean"
                    },
                    "viewport": {
                      "type": "object",
                      "properties": {
                        "width": {
                          "type": "number"
                        },
                        "height": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "sessionId"
              ]
            }
          },
          {
            "name": "execute-in-context",
            "description": "Execute commands in a browser context",
            "inputSchema": {
              "type": "object",
              "properties": {
                "contextId": {
                  "type": "string",
                  "description": "Context ID to execute command in"
                },
                "command": {
                  "type": "string",
                  "description": "Command to execute"
                },
                "parameters": {
                  "type": "object",
                  "description": "Parameters for the command"
                }
              },
              "required": [
                "contextId",
                "command"
              ]
            }
          }
        ],
        "resources": [
          {
            "uri": "api://catalog",
            "name": "API Catalog",
            "description": "Complete catalog of available APIs",
            "mimeType": "application/json"
          },
          {
            "uri": "api://health",
            "name": "System Health",
            "description": "Current system health and status",
            "mimeType": "application/json"
          }
        ]
      }
    },
    "sessionManagement": {
      "status": "success",
      "details": {
        "operationTime": 7,
        "sessionData": {
          "error": "Invalid username or password",
          "code": "AUTH_FAILED"
        },
        "activeSessions": 0
      }
    },
    "browserAutomation": {
      "status": "skipped",
      "details": {
        "reason": "No session available"
      }
    },
    "contextManagement": {
      "status": "skipped",
      "details": {
        "reason": "No context available"
      }
    },
    "resourceAccess": {
      "status": "success",
      "details": {
        "operationTime": 3,
        "results": {
          "apiCatalog": {
            "success": true,
            "endpointCount": 0,
            "protocols": []
          },
          "systemHealth": {
            "success": true,
            "status": "healthy",
            "components": []
          }
        }
      }
    }
  },
  "mcpMessages": [
    {
      "type": "sent",
      "message": {
        "jsonrpc": "2.0",
        "method": "initialize",
        "params": {
          "protocolVersion": "2024-11-05",
          "capabilities": {
            "roots": {
              "listChanged": true
            },
            "sampling": {}
          },
          "clientInfo": {
            "name": "puppeteer-mcp-test",
            "version": "1.0.0"
          }
        },
        "id": 1
      },
      "timestamp": "2025-07-06T00:07:07.656Z"
    },
    {
      "type": "received",
      "message": {
        "result": {
          "protocolVersion": "2024-11-05",
          "capabilities": {
            "resources": {},
            "tools": {},
            "prompts": {}
          },
          "serverInfo": {
            "name": "puppeteer-mcp",
            "version": "0.1.0"
          }
        },
        "jsonrpc": "2.0",
        "id": 1
      },
      "timestamp": "2025-07-06T00:07:07.661Z",
      "latency": 5
    },
    {
      "type": "sent",
      "message": {
        "jsonrpc": "2.0",
        "method": "notifications/initialized",
        "params": {}
      },
      "timestamp": "2025-07-06T00:07:07.662Z"
    },
    {
      "type": "sent",
      "message": {
        "jsonrpc": "2.0",
        "method": "tools/list",
        "params": {},
        "id": 2
      },
      "timestamp": "2025-07-06T00:07:07.662Z"
    },
    {
      "type": "received",
      "message": {
        "result": {
          "tools": [
            {
              "name": "execute-api",
              "description": "Execute API calls across REST, gRPC, or WebSocket protocols",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "rest",
                      "grpc",
                      "websocket"
                    ],
                    "description": "Protocol to use"
                  },
                  "operation": {
                    "type": "object",
                    "description": "Protocol-specific operation details"
                  },
                  "auth": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "jwt",
                          "apikey",
                          "session"
                        ]
                      },
                      "credentials": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "protocol",
                  "operation"
                ]
              }
            },
            {
              "name": "create-session",
              "description": "Create a new session for API interactions",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "number",
                    "description": "Session duration in seconds"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            },
            {
              "name": "list-sessions",
              "description": "List active sessions",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "delete-session",
              "description": "Delete an active session",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "description": "Session ID to delete"
                  }
                },
                "required": [
                  "sessionId"
                ]
              }
            },
            {
              "name": "create-browser-context",
              "description": "Create a Puppeteer browser context",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "headless": {
                        "type": "boolean"
                      },
                      "viewport": {
                        "type": "object",
                        "properties": {
                          "width": {
                            "type": "number"
                          },
                          "height": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "sessionId"
                ]
              }
            },
            {
              "name": "execute-in-context",
              "description": "Execute commands in a browser context",
              "inputSchema": {
                "type": "object",
                "properties": {
                  "contextId": {
                    "type": "string",
                    "description": "Context ID to execute command in"
                  },
                  "command": {
                    "type": "string",
                    "description": "Command to execute"
                  },
                  "parameters": {
                    "type": "object",
                    "description": "Parameters for the command"
                  }
                },
                "required": [
                  "contextId",
                  "command"
                ]
              }
            }
          ]
        },
        "jsonrpc": "2.0",
        "id": 2
      },
      "timestamp": "2025-07-06T00:07:07.664Z",
      "latency": 2
    },
    {
      "type": "sent",
      "message": {
        "jsonrpc": "2.0",
        "method": "resources/list",
        "params": {},
        "id": 3
      },
      "timestamp": "2025-07-06T00:07:07.665Z"
    },
    {
      "type": "received",
      "message": {
        "result": {
          "resources": [
            {
              "uri": "api://catalog",
              "name": "API Catalog",
              "description": "Complete catalog of available APIs",
              "mimeType": "application/json"
            },
            {
              "uri": "api://health",
              "name": "System Health",
              "description": "Current system health and status",
              "mimeType": "application/json"
            }
          ]
        },
        "jsonrpc": "2.0",
        "id": 3
      },
      "timestamp": "2025-07-06T00:07:07.666Z",
      "latency": 1
    },
    {
      "type": "sent",
      "message": {
        "jsonrpc": "2.0",
        "method": "tools/call",
        "params": {
          "name": "create-session",
          "arguments": {
            "username": "test_user",
            "password": "test_password",
            "duration": 3600
          }
        },
        "id": 4
      },
      "timestamp": "2025-07-06T00:07:07.667Z"
    },
    {
      "type": "received",
      "message": {
        "result": {
          "content": [
            {
              "type": "text",
              "text": "{\"error\":\"Invalid username or password\",\"code\":\"AUTH_FAILED\"}"
            }
          ]
        },
        "jsonrpc": "2.0",
        "id": 4
      },
      "timestamp": "2025-07-06T00:07:07.671Z",
      "latency": 5
    },
    {
      "type": "sent",
      "message": {
        "jsonrpc": "2.0",
        "method": "tools/call",
        "params": {
          "name": "list-sessions",
          "arguments": {}
        },
        "id": 5
      },
      "timestamp": "2025-07-06T00:07:07.672Z"
    },
    {
      "type": "received",
      "message": {
        "result": {
          "content": [
            {
              "type": "text",
              "text": "{\"sessions\":[],\"count\":0}"
            }
          ]
        },
        "jsonrpc": "2.0",
        "id": 5
      },
      "timestamp": "2025-07-06T00:07:07.673Z",
      "latency": 1
    },
    {
      "type": "sent",
      "message": {
        "jsonrpc": "2.0",
        "method": "resources/read",
        "params": {
          "uri": "api://catalog"
        },
        "id": 6
      },
      "timestamp": "2025-07-06T00:07:07.674Z"
    },
    {
      "type": "received",
      "message": {
        "result": {
          "contents": [
            {
              "uri": "api://catalog",
              "mimeType": "application/json",
              "text": "{\n  \"rest\": {\n    \"baseUrl\": \"/api/v1\",\n    \"endpoints\": [\n      {\n        \"path\": \"/sessions\",\n        \"methods\": [\n          \"GET\",\n          \"POST\",\n          \"DELETE\"\n        ],\n        \"description\": \"Session management\"\n      },\n      {\n        \"path\": \"/sessions/:id\",\n        \"methods\": [\n          \"GET\",\n          \"DELETE\"\n        ],\n        \"description\": \"Individual session operations\"\n      },\n      {\n        \"path\": \"/contexts\",\n        \"methods\": [\n          \"GET\",\n          \"POST\",\n          \"PUT\",\n          \"DELETE\"\n        ],\n        \"description\": \"Context management\"\n      },\n      {\n        \"path\": \"/contexts/:id\",\n        \"methods\": [\n          \"GET\",\n          \"PUT\",\n          \"DELETE\"\n        ],\n        \"description\": \"Individual context operations\"\n      },\n      {\n        \"path\": \"/contexts/:id/execute\",\n        \"methods\": [\n          \"POST\"\n        ],\n        \"description\": \"Execute commands in context\"\n      },\n      {\n        \"path\": \"/api-keys\",\n        \"methods\": [\n          \"GET\",\n          \"POST\"\n        ],\n        \"description\": \"API key management\"\n      },\n      {\n        \"path\": \"/api-keys/:id\",\n        \"methods\": [\n          \"DELETE\"\n        ],\n        \"description\": \"Individual API key operations\"\n      },\n      {\n        \"path\": \"/health\",\n        \"methods\": [\n          \"GET\"\n        ],\n        \"description\": \"Health check\"\n      }\n    ],\n    \"authentication\": {\n      \"methods\": [\n        \"jwt\",\n        \"apikey\",\n        \"session\"\n      ],\n      \"headers\": {\n        \"jwt\": \"Authorization: Bearer <token>\",\n        \"apikey\": \"X-API-Key: <key>\"\n      }\n    }\n  },\n  \"grpc\": {\n    \"services\": [\n      {\n        \"name\": \"SessionService\",\n        \"methods\": [\n          \"CreateSession\",\n          \"GetSession\",\n          \"DeleteSession\",\n          \"ListSessions\"\n        ]\n      },\n      {\n        \"name\": \"ContextService\",\n        \"methods\": [\n          \"CreateContext\",\n          \"GetContext\",\n          \"ExecuteCommand\"\n        ]\n      },\n      {\n        \"name\": \"HealthService\",\n        \"methods\": [\n          \"Check\",\n          \"Watch\"\n        ]\n      }\n    ]\n  },\n  \"websocket\": {\n    \"endpoint\": \"/ws\",\n    \"topics\": [\n      {\n        \"name\": \"session-updates\",\n        \"description\": \"Real-time session events\"\n      },\n      {\n        \"name\": \"context-updates\",\n        \"description\": \"Real-time context events\"\n      }\n    ]\n  }\n}"
            }
          ]
        },
        "jsonrpc": "2.0",
        "id": 6
      },
      "timestamp": "2025-07-06T00:07:07.675Z",
      "latency": 1
    },
    {
      "type": "sent",
      "message": {
        "jsonrpc": "2.0",
        "method": "resources/read",
        "params": {
          "uri": "api://health"
        },
        "id": 7
      },
      "timestamp": "2025-07-06T00:07:07.676Z"
    },
    {
      "type": "received",
      "message": {
        "result": {
          "contents": [
            {
              "uri": "api://health",
              "mimeType": "application/json",
              "text": "{\n  \"status\": \"healthy\",\n  \"uptime\": 1758,\n  \"services\": {\n    \"rest\": \"operational\",\n    \"grpc\": \"operational\",\n    \"websocket\": \"operational\",\n    \"mcp\": \"operational\"\n  },\n  \"timestamp\": \"2025-07-06T00:07:07.677Z\"\n}"
            }
          ]
        },
        "jsonrpc": "2.0",
        "id": 7
      },
      "timestamp": "2025-07-06T00:07:07.677Z",
      "latency": 1
    }
  ],
  "errors": [],
  "warnings": [
    {
      "timestamp": "2025-07-06T00:07:07.674Z",
      "message": "No session available, skipping browser tests",
      "phase": "browserAutomation"
    },
    {
      "timestamp": "2025-07-06T00:07:07.674Z",
      "message": "No context available, skipping context tests",
      "phase": "contextManagement"
    }
  ],
  "performance": {
    "messageLatencies": [
      {
        "method": "initialize",
        "latency": 5,
        "timestamp": "2025-07-06T00:07:07.661Z"
      },
      {
        "method": "tools/list",
        "latency": 2,
        "timestamp": "2025-07-06T00:07:07.664Z"
      },
      {
        "method": "resources/list",
        "latency": 1,
        "timestamp": "2025-07-06T00:07:07.666Z"
      },
      {
        "method": "tools/call",
        "latency": 5,
        "timestamp": "2025-07-06T00:07:07.671Z"
      },
      {
        "method": "tools/call",
        "latency": 1,
        "timestamp": "2025-07-06T00:07:07.673Z"
      },
      {
        "method": "resources/read",
        "latency": 1,
        "timestamp": "2025-07-06T00:07:07.675Z"
      },
      {
        "method": "resources/read",
        "latency": 1,
        "timestamp": "2025-07-06T00:07:07.677Z"
      }
    ],
    "operationTimings": {}
  },
  "screenshots": [],
  "htmlContent": [],
  "sessionData": {
    "error": "Invalid username or password",
    "code": "AUTH_FAILED"
  },
  "contextData": null,
  "endTime": "2025-07-06T00:07:08.680Z",
  "duration": 3032,
  "statistics": {
    "totalMessages": 15,
    "averageLatency": 2.2857142857142856,
    "successfulPhases": 5,
    "failedPhases": 0,
    "skippedPhases": 2
  }
}